[
    // I really like how the command + option + control works
    // os Apple keyboards, so I'm trying to put the shortcuts
    // as if I was typing in those keyboards.

    // alt  - command
    // win  - options
    // ctrl - control

    //--------------------------------------------------------------------------
    // Navigation
    //    Editor Panels
    { "key": "alt+h", "command": "workbench.action.navigateLeft"  },
    { "key": "alt+l", "command": "workbench.action.navigateRight" },
    { "key": "alt+k", "command": "workbench.action.navigateUp"    },
    { "key": "alt+j", "command": "workbench.action.navigateDown"  },
    //    Tabs
    { "key": "alt+ctrl+h", "command": "workbench.action.previousEditor" },
    { "key": "alt+ctrl+l", "command": "workbench.action.nextEditor" },
    //    Quick Open
    { "key": "ctrl+j", "command": "workbench.action.quickOpenSelectNext",     "when": "inQuickOpen" },
    { "key": "ctrl+k", "command": "workbench.action.quickOpenSelectPrevious", "when": "inQuickOpen" },
    { "key": "ctrl+n", "command": "workbench.action.quickOpenSelectNext",     "when": "inQuickOpen" },
    { "key": "ctrl+p", "command": "workbench.action.quickOpenSelectPrevious", "when": "inQuickOpen" },
    //    Suggestions
    { "key": "ctrl+j", "command": "selectNextSuggestion", "when": "suggestWidgetVisible" },
    { "key": "ctrl+k", "command": "selectPrevSuggestion", "when": "suggestWidgetVisible" },
    //    Go Back / Forward
    { "key": "ctrl+-", "command": "workbench.action.navigateBack"    },
    { "key": "ctrl+=", "command": "workbench.action.navigateForward" },
    // @todo(stdmatt): Add navigation to the quick fix (that small light bulb)....
    //    Switch Source
    { "key": "alt+e alt+o", "command": "C_Cpp.SwitchHeaderSource", "when": "editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'" },

    //--------------------------------------------------------------------------
    // Toggle Panels
    //    Explorer
    { "key": "alt+o alt+p", "command": "workbench.view.explorer",                  "when": "!sideBarVisible || activeViewlet != 'workbench.view.explorer'" },
    { "key": "alt+o alt+p", "command": "workbench.action.toggleSidebarVisibility", "when": " sideBarVisible && activeViewlet == 'workbench.view.explorer'" },
    //    Outline
    { "key": "alt+o alt+o", "command": "outline.focus" },
    // @todo(stdmatt): Toggle the outline view...
    //    Terminal
    { "key": "alt+o alt+[", "command": "workbench.action.terminal.toggleTerminal" },
    //    Quick Open
    { "key": "space space", "command": "workbench.action.quickOpen", "when": "editorTextFocus && vim.active && vim.mode != 'Insert'" },
    { "key": "alt+shift+o", "command": "workbench.action.quickOpen"    },
    { "key": "alt+shift+p", "command": "workbench.action.showCommands" },

    //    Split Editor
    { "key": "alt+shift+\\", "command": "workbench.action.splitEditor"          },
    { "key": "alt+shift+-",  "command": "workbench.action.splitEditorOrthogonal"},
    //    Pin Editor tab
    { "key": "alt+e alt+p", "command": "workbench.action.pinEditor",   "when": "!activeEditorIsPinned" },
    { "key": "alt+e alt+p", "command": "workbench.action.unpinEditor", "when": "activeEditorIsPinned" },
    //    Close
    { "key": "shift+alt+x", "command": "workbench.action.closeActiveEditor",
        // "when": "editorTextFocus"
    },

    //    Minimap
    { "key": "alt+o alt+m", "command": "editor.action.toggleMinimap" },
    //    Maximize Group
    { "key": "alt+e alt+m", "command": "workbench.action.minimizeOtherEditors" },

    //--------------------------------------------------------------------------
    // Actions
    //    Clipboard
    { "key": "ctrl+shift+c",  "command": "editor.action.clipboardCopyAction",  "when": "textInputFocus" },
    { "key": "ctrl+shift+v",  "command": "editor.action.clipboardPasteAction", "when": "textInputFocus" },
    //    Find
    { "key": "alt+f", "command": "actions.find" },
    { "key": "alt+r", "command": "editor.action.startFindReplaceAction" },
    //    Insert date time...
    // @todo(stdmatt): 30 Nov, 2021 at 05:58:07
    // Check how we want to add the comment prefix on it...
    {
        "key": "alt+;",
        "command": "editor.action.insertSnippet",
        "args": {
            "name": "add_current_time"
        }
     },

    //    Fold
    { "key": "ctrl+,", "command": "editor.fold"   },
    { "key": "ctrl+.", "command": "editor.unfold" },
    //    Comments
    { "key": "alt+/",       "command": "editor.action.commentLine", "when": "editorTextFocus && !editorReadonly" },
    //   Explorer - New File/Folder
    { "key": "ctrl+n",       "command": "explorer.newFile",   "when": " sideBarFocus && sideBarVisible && activeViewlet == 'workbench.view.explorer' && !inQuickOpen" },
    { "key": "ctrl+shift+n", "command": "explorer.newFolder", "when": " sideBarFocus && sideBarVisible && activeViewlet == 'workbench.view.explorer' && !inQuickOpen" },

    //
    // Remove stuff...
    //
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+h",
        "command": "-testing.toggleTestingPeekHistory",
        "when": "testing.isPeekVisible"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+alt+up ctrl+shift+alt+up",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+alt+down ctrl+shift+alt+down",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "alt+o",
        "command": "-C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
]
