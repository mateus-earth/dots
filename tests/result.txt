5 00:00.0004857 $env:POWERSHELL_TELEMETRY_OPTOUT = 1;
6 00:00.0006937 $env:DOTS_IS_VERSBOSE = 1;
12 00:00.0000361 $PROGRAM_NAME = "dots";
13 00:00.0000349 $PROGRAM_VERSION = "3.0.0";
14 00:00.0000300 $PROGRAM_AUTHOR = "stdmatt - <stdmatt@pixelwizads.io>";
15 00:00.0000301 $PROGRAM_COPYRIGHT_OWNER = "stdmatt";
16 00:00.0000298 $PROGRAM_COPYRIGHT_YEARS = "2021, 2022";
17 00:00.0000297 $PROGRAM_DATE = "30 Nov, 2021";
18 00:00.0000298 $PROGRAM_LICENSE = "GPLv3";
135 00:00.0003017 $fullpath = $args[0];
137 00:00.0002253 $item = $args[$i]
138 00:00.0046066 $fullpath = (Join-Path $fullpath $item);
174 00:00.0000319 $SH_HEX_RED = "#FF0000";
175 00:00.0000288 $SH_HEX_GREEN = "#00FF00";
176 00:00.0000303 $SH_HEX_BLUE = "#0000FF";
178 00:00.0000447 $SH_HEX_CYAN = "#00FFFF";
179 00:00.0000298 $SH_HEX_YELLOW = "#FFFF00";
180 00:00.0000301 $SH_HEX_MAGENTA = "#FF00FF";
182 00:00.0000305 $SH_HEX_BLACK = "#000000";
183 00:00.0000304 $SH_HEX_GRAY = "#808080";
184 00:00.0000307 $SH_HEX_LIGHT_GRAY = "#D4D4D3";
185 00:00.0000296 $SH_HEX_WHITE = "#FFFFFF";
223 00:00.0007412 $sh_IsWsl = (_sh_check_wsl);
224 00:00.0004048 $sh_OSName = (sh_get_os_name);
243 00:00.0003246 Set-PSReadLineOption `
249 00:00.0004039 Set-PSReadLineOption -EditMode Vi;
253 00:00.0000459 $_ps_color_black = "#1E1E1E"; ##
254 00:00.0000344 $_ps_color_gray = "#808080"; ## #include
255 00:00.0000327 $_ps_color_white = "#D4D4D4"; ## normal text
256 00:00.0001046 $_ps_color_light_blue = "#9CDCFE"; ## my_variable
257 00:00.0000460 $_ps_color_blue = "#569CD6"; ## public static void
258 00:00.0000319 $_ps_color_blue_green = "#4EC9B0"; ## Class_Type
259 00:00.0000305 $_ps_color_green = "#608B4E"; ## /* comment */
260 00:00.0000308 $_ps_color_light_yellow = "#B5CEA8"; ## 3.14f
261 00:00.0000301 $_ps_color_yellow = "#DCDCAA"; ## my_function()
262 00:00.0000296 $_ps_color_yellow_orange = "#D7BA7D"; ## #selector
263 00:00.0000303 $_ps_color_orange = "#CE9178"; ## "string"
264 00:00.0000285 $_ps_color_light_red = "#D16969"; ## /[a-Z]/
265 00:00.0000299 $_ps_color_red = "#F44747"; ## error message
266 00:00.0000301 $_ps_color_pink = "#C586C0"; ## else if
268 00:00.0002289 Set-PSReadLineOption -Colors @{
287 00:00.0000327 $WORKSTATION_PREFIX = "KIV-WKS"; ## My workstation prefix, so I can know that I'm working computer...
288 00:00.0196648 $IS_WORK_COMPUTER = (hostname).Contains($WORKSTATION_PREFIX);
292 00:00.0006717 $HOME_DIR = (sh_get_home_dir);
293 00:00.0024748 $DOWNLOADS_DIR = (sh_join_path "$HOME_DIR" "Downloads");
294 00:00.0039407 $DOCUMENTS_DIR = (sh_join_path "$HOME_DIR" "Documents");
295 00:00.0007559 $DESKTOP_DIR = (sh_join_path "$HOME_DIR" "Desktop");
296 00:00.0008600 $STDMATT_BIN_DIR = (sh_join_path "$HOME_DIR" ".stdmatt/bin"); ## My binaries that I don't wanna on system
297 00:00.0017787 $PROJECTS_DIR = (sh_join_path "$HOME_DIR" "Projects");
304 00:00.0002823 $DOTS_DIR = "$PROJECTS_DIR/stdmatt/personal/dots";
309 00:00.0000530 $FONTS_SOURCE_DIR = "$DOTS_DIR/extras/fonts";
310 00:00.0000493 $FONTS_WIN32_INSTALL_FULLPATH = "$HOME_DIR/AppData/Local/Microsoft/Windows/Fonts";## @XXX(stdmatt): Just a
311 00:00.0000348 $FONTS_MACOS_INSTALL_FULLPATH = "$HOME_DIR/Library/Fonts";
312 00:00.0000371 $FONTS_GNU_INSTALL_FULLPATH = "$HOME_DIR/.local/share/fonts";
314 00:00.0000347 $GIT_SOURCE_DIR = "$DOTS_DIR/extras/git";
315 00:00.0000411 $GIT_IGNORE_INSTALL_FULLPATH = "$HOME_DIR/.gitignore";
317 00:00.0000373 $PROFILE_SOURCE_DIR = "$DOTS_DIR/src";
318 00:00.0000417 $PWSH_WIN32_PROFILE_INSTALL_FULLPATH = "$HOME_DIR/Documents/PowerShell/Microsoft.PowerShell_profile.ps1";
319 00:00.0000338 $PWSH_UNIX_PROFILE_INSTALL_FULLPATH = "$HOME_DIR/.config/powershell/Microsoft.PowerShell_profile.ps1";
320 00:00.0000386 $WINDOWS_PROFILE_INSTALL_FULLPATH =
322 00:00.0000404 $TERMINAL_SOURCE_DIR = "$DOTS_DIR/extras/terminal";
323 00:00.0000346 $TERMINAL_WIN32_SETTINGS_INSTALL_FULLPATH = "%APPDATA%\alacritty\alacritty.yml"
324 00:00.0000389 $TERMINAL_UNIX_SETTINGS_INSTALL_FULLPATH = "$HOME_DIR/.config/alacritty/alacritty.yml"
326 00:00.0000449 $VIM_SOURCE_DIR = "$DOTS_DIR/extras/vim";
327 00:00.0000336 $VIMRC_INSTALL_FULLPATH = "$HOME_DIR/.vimrc";
328 00:00.0000330 $NEOVIM_WIN32_INIT_INSTALL_FULLPATH = "$HOME_DIR/AppData/Local/nvim/init.vim";
329 00:00.0000371 $NEOVIM_UNIX_INIT_INSTALL_FULLPATH = "$HOME_DIR/.config/nvim/init.vim";
331 00:00.0000330 $BINARIES_SOURCE_DIR = "$DOTS_DIR/extras/bin/win32";
332 00:00.0000385 $BINARIES_INSTALL_FULLPATH = "$STDMATT_BIN_DIR";
336 00:00.0000373 $JOURNAL_DIR = "$HOME_DIR/Desktop/Journal";
337 00:00.0000303 $JOURNAL_GIT_URL = "https://gitlab.com/stdmatt-private/journal";
338 00:00.0000295 $JOURNAL_FILE_EXT = ".info";
399 00:00.0000377 $INVALID_FILE_TIME = -1;
880 00:00.0000683 $global:OLDPWD="";
896 00:00.0003284 Remove-Item -Path Alias:cd
897 00:00.0002169 Set-Alias -Name cd -Value _stdmatt_cd -Force -Option AllScope
954 00:00.0000827 $_nv = if($IsWindows) { "nvim.exe" } else { "nvim" }
955 00:00.0001735 Set-Alias -Name vi -Value $_nv -Force -Option AllScope
956 00:00.0001398 Set-Alias -Name vim -Value $_nv -Force -Option AllScope
957 00:00.0001430 Set-Alias -Name nv -Value $_nv -Force -Option AllScope
1059 00:00.0005057 $env:PATH = $env:PATH + ":" + "/Users/stdmatt/.stdmatt/bin";
